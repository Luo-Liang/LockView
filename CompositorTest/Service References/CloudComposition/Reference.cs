//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompositorTest.CloudComposition {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageCompositionRequest", Namespace="http://schemas.datacontract.org/2004/07/InfoView")]
    [System.SerializableAttribute()]
    public partial class ImageCompositionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CompositorTest.CloudComposition.OverlayContextContract ContextContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CompositorTest.CloudComposition.OverlayFormattingContract FormattingContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CompositorTest.CloudComposition.OverlayLayoutContract LayoutContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RawImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CompositorTest.CloudComposition.OverlayContextContract ContextContract {
            get {
                return this.ContextContractField;
            }
            set {
                if ((this.ContextContractField.Equals(value) != true)) {
                    this.ContextContractField = value;
                    this.RaisePropertyChanged("ContextContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CompositorTest.CloudComposition.OverlayFormattingContract FormattingContract {
            get {
                return this.FormattingContractField;
            }
            set {
                if ((this.FormattingContractField.Equals(value) != true)) {
                    this.FormattingContractField = value;
                    this.RaisePropertyChanged("FormattingContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterestId {
            get {
                return this.InterestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InterestIdField, value) != true)) {
                    this.InterestIdField = value;
                    this.RaisePropertyChanged("InterestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CompositorTest.CloudComposition.OverlayLayoutContract LayoutContract {
            get {
                return this.LayoutContractField;
            }
            set {
                if ((this.LayoutContractField.Equals(value) != true)) {
                    this.LayoutContractField = value;
                    this.RaisePropertyChanged("LayoutContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RawImage {
            get {
                return this.RawImageField;
            }
            set {
                if ((object.ReferenceEquals(this.RawImageField, value) != true)) {
                    this.RawImageField = value;
                    this.RaisePropertyChanged("RawImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverlayContextContract", Namespace="http://schemas.datacontract.org/2004/07/InfoView.DataContract")]
    [System.SerializableAttribute()]
    public partial struct OverlayContextContract : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstLine {
            get {
                return this.FirstLineField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstLineField, value) != true)) {
                    this.FirstLineField = value;
                    this.RaisePropertyChanged("FirstLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondLine {
            get {
                return this.SecondLineField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondLineField, value) != true)) {
                    this.SecondLineField = value;
                    this.RaisePropertyChanged("SecondLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverlayFormattingContract", Namespace="http://schemas.datacontract.org/2004/07/InfoView.DataContract")]
    [System.SerializableAttribute()]
    public partial struct OverlayFormattingContract : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundFirstLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundSecondLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackgroundTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CompositorTest.CloudComposition.FontContract FirstLineFontField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForegroundFirstLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForegroundSecondLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForegroundTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CompositorTest.CloudComposition.FontContract SecondLineFontField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CompositorTest.CloudComposition.FontContract TitleFontField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundFirstLine {
            get {
                return this.BackgroundFirstLineField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundFirstLineField, value) != true)) {
                    this.BackgroundFirstLineField = value;
                    this.RaisePropertyChanged("BackgroundFirstLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundSecondLine {
            get {
                return this.BackgroundSecondLineField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundSecondLineField, value) != true)) {
                    this.BackgroundSecondLineField = value;
                    this.RaisePropertyChanged("BackgroundSecondLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundTitle {
            get {
                return this.BackgroundTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundTitleField, value) != true)) {
                    this.BackgroundTitleField = value;
                    this.RaisePropertyChanged("BackgroundTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CompositorTest.CloudComposition.FontContract FirstLineFont {
            get {
                return this.FirstLineFontField;
            }
            set {
                if ((this.FirstLineFontField.Equals(value) != true)) {
                    this.FirstLineFontField = value;
                    this.RaisePropertyChanged("FirstLineFont");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForegroundFirstLine {
            get {
                return this.ForegroundFirstLineField;
            }
            set {
                if ((object.ReferenceEquals(this.ForegroundFirstLineField, value) != true)) {
                    this.ForegroundFirstLineField = value;
                    this.RaisePropertyChanged("ForegroundFirstLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForegroundSecondLine {
            get {
                return this.ForegroundSecondLineField;
            }
            set {
                if ((object.ReferenceEquals(this.ForegroundSecondLineField, value) != true)) {
                    this.ForegroundSecondLineField = value;
                    this.RaisePropertyChanged("ForegroundSecondLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForegroundTitle {
            get {
                return this.ForegroundTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ForegroundTitleField, value) != true)) {
                    this.ForegroundTitleField = value;
                    this.RaisePropertyChanged("ForegroundTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CompositorTest.CloudComposition.FontContract SecondLineFont {
            get {
                return this.SecondLineFontField;
            }
            set {
                if ((this.SecondLineFontField.Equals(value) != true)) {
                    this.SecondLineFontField = value;
                    this.RaisePropertyChanged("SecondLineFont");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CompositorTest.CloudComposition.FontContract TitleFont {
            get {
                return this.TitleFontField;
            }
            set {
                if ((this.TitleFontField.Equals(value) != true)) {
                    this.TitleFontField = value;
                    this.RaisePropertyChanged("TitleFont");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverlayLayoutContract", Namespace="http://schemas.datacontract.org/2004/07/InfoView.DataContract")]
    [System.SerializableAttribute()]
    public partial struct OverlayLayoutContract : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoExpandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CompositorTest.CloudComposition.Point OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParagraphSpacingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetWidthField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoExpand {
            get {
                return this.AutoExpandField;
            }
            set {
                if ((this.AutoExpandField.Equals(value) != true)) {
                    this.AutoExpandField = value;
                    this.RaisePropertyChanged("AutoExpand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CompositorTest.CloudComposition.Point Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((this.OriginField.Equals(value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParagraphSpacing {
            get {
                return this.ParagraphSpacingField;
            }
            set {
                if ((this.ParagraphSpacingField.Equals(value) != true)) {
                    this.ParagraphSpacingField = value;
                    this.RaisePropertyChanged("ParagraphSpacing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetHeight {
            get {
                return this.TargetHeightField;
            }
            set {
                if ((this.TargetHeightField.Equals(value) != true)) {
                    this.TargetHeightField = value;
                    this.RaisePropertyChanged("TargetHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetWidth {
            get {
                return this.TargetWidthField;
            }
            set {
                if ((this.TargetWidthField.Equals(value) != true)) {
                    this.TargetWidthField = value;
                    this.RaisePropertyChanged("TargetWidth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FontContract", Namespace="http://schemas.datacontract.org/2004/07/InfoView.DataContract")]
    [System.SerializableAttribute()]
    public partial struct FontContract : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontFamilyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FontSizeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontFamily {
            get {
                return this.FontFamilyField;
            }
            set {
                if ((object.ReferenceEquals(this.FontFamilyField, value) != true)) {
                    this.FontFamilyField = value;
                    this.RaisePropertyChanged("FontFamily");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FontSize {
            get {
                return this.FontSizeField;
            }
            set {
                if ((this.FontSizeField.Equals(value) != true)) {
                    this.FontSizeField = value;
                    this.RaisePropertyChanged("FontSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://schemas.datacontract.org/2004/07/InfoView")]
    [System.SerializableAttribute()]
    public partial struct Point : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageCompositionResponse", Namespace="http://schemas.datacontract.org/2004/07/InfoView")]
    [System.SerializableAttribute()]
    public partial class ImageCompositionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CloudComposition.IImageCompositionService")]
    public interface IImageCompositionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageCompositionService/Compose", ReplyAction="http://tempuri.org/IImageCompositionService/ComposeResponse")]
        CompositorTest.CloudComposition.ImageCompositionResponse Compose(CompositorTest.CloudComposition.ImageCompositionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageCompositionService/Compose", ReplyAction="http://tempuri.org/IImageCompositionService/ComposeResponse")]
        System.Threading.Tasks.Task<CompositorTest.CloudComposition.ImageCompositionResponse> ComposeAsync(CompositorTest.CloudComposition.ImageCompositionRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImageCompositionServiceChannel : CompositorTest.CloudComposition.IImageCompositionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageCompositionServiceClient : System.ServiceModel.ClientBase<CompositorTest.CloudComposition.IImageCompositionService>, CompositorTest.CloudComposition.IImageCompositionService {
        
        public ImageCompositionServiceClient() {
        }
        
        public ImageCompositionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageCompositionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageCompositionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageCompositionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CompositorTest.CloudComposition.ImageCompositionResponse Compose(CompositorTest.CloudComposition.ImageCompositionRequest request) {
            return base.Channel.Compose(request);
        }
        
        public System.Threading.Tasks.Task<CompositorTest.CloudComposition.ImageCompositionResponse> ComposeAsync(CompositorTest.CloudComposition.ImageCompositionRequest request) {
            return base.Channel.ComposeAsync(request);
        }
    }
}
