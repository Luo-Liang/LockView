//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompositorTest.CloudComposition {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageCompositionRequest", Namespace="http://schemas.datacontract.org/2004/07/InfoView")]
    [System.SerializableAttribute()]
    public partial class ImageCompositionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InfoView.DataContract.OverlayContextContract ContextContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InfoView.DataContract.OverlayFormattingContract FormattingContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InfoView.DataContract.OverlayLayoutContract LayoutContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RawImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InfoView.DataContract.OverlayContextContract ContextContract {
            get {
                return this.ContextContractField;
            }
            set {
                if ((this.ContextContractField.Equals(value) != true)) {
                    this.ContextContractField = value;
                    this.RaisePropertyChanged("ContextContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InfoView.DataContract.OverlayFormattingContract FormattingContract {
            get {
                return this.FormattingContractField;
            }
            set {
                if ((this.FormattingContractField.Equals(value) != true)) {
                    this.FormattingContractField = value;
                    this.RaisePropertyChanged("FormattingContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterestId {
            get {
                return this.InterestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InterestIdField, value) != true)) {
                    this.InterestIdField = value;
                    this.RaisePropertyChanged("InterestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InfoView.DataContract.OverlayLayoutContract LayoutContract {
            get {
                return this.LayoutContractField;
            }
            set {
                if ((this.LayoutContractField.Equals(value) != true)) {
                    this.LayoutContractField = value;
                    this.RaisePropertyChanged("LayoutContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RawImage {
            get {
                return this.RawImageField;
            }
            set {
                if ((object.ReferenceEquals(this.RawImageField, value) != true)) {
                    this.RawImageField = value;
                    this.RaisePropertyChanged("RawImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageCompositionResponse", Namespace="http://schemas.datacontract.org/2004/07/InfoView")]
    [System.SerializableAttribute()]
    public partial class ImageCompositionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CloudComposition.IImageCompositionService")]
    public interface IImageCompositionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageCompositionService/Compose", ReplyAction="http://tempuri.org/IImageCompositionService/ComposeResponse")]
        CompositorTest.CloudComposition.ImageCompositionResponse Compose(CompositorTest.CloudComposition.ImageCompositionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageCompositionService/Compose", ReplyAction="http://tempuri.org/IImageCompositionService/ComposeResponse")]
        System.Threading.Tasks.Task<CompositorTest.CloudComposition.ImageCompositionResponse> ComposeAsync(CompositorTest.CloudComposition.ImageCompositionRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImageCompositionServiceChannel : CompositorTest.CloudComposition.IImageCompositionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageCompositionServiceClient : System.ServiceModel.ClientBase<CompositorTest.CloudComposition.IImageCompositionService>, CompositorTest.CloudComposition.IImageCompositionService {
        
        public ImageCompositionServiceClient() {
        }
        
        public ImageCompositionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageCompositionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageCompositionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageCompositionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CompositorTest.CloudComposition.ImageCompositionResponse Compose(CompositorTest.CloudComposition.ImageCompositionRequest request) {
            return base.Channel.Compose(request);
        }
        
        public System.Threading.Tasks.Task<CompositorTest.CloudComposition.ImageCompositionResponse> ComposeAsync(CompositorTest.CloudComposition.ImageCompositionRequest request) {
            return base.Channel.ComposeAsync(request);
        }
    }
}
