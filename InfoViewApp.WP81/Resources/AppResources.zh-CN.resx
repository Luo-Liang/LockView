<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>zh-CN</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ByeBye" xml:space="preserve">
    <value>和平凡,</value>
  </data>
  <data name="mundane" xml:space="preserve">
    <value>锁屏界面</value>
  </data>
  <data name="JumpIn" xml:space="preserve">
    <value>开始!</value>
  </data>
  <data name="Bing" xml:space="preserve">
    <value>必应</value>
  </data>
  <data name="LetsGo" xml:space="preserve">
    <value>继续!</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>下一步</value>
  </data>
  <data name="UseOwnImageText" xml:space="preserve">
    <value>若您希望从您的图片库中选择一张静态图片，请选择此项</value>
  </data>
  <data name="UseOwnImage" xml:space="preserve">
    <value>图片库</value>
  </data>
  <data name="lockscreen" xml:space="preserve">
    <value>说再见</value>
  </data>
  <data name="ImageSourceSelection" xml:space="preserve">
    <value>您希望从哪里得到您的锁屏墙纸?您可以从图片库中选择，或者，我们将帮您从必应美图中选择一张。</value>
  </data>
  <data name="BingText" xml:space="preserve">
    <value>选择此项若您希望从必应每天获得一张让人耳目一新的美图。若您选择此项，您同意该图片的唯一用途是墙纸。</value>
  </data>
  <data name="ImageCropping" xml:space="preserve">
    <value>四处看看,选择最棒的景色!完成后，请按"棒极了!"</value>
  </data>
  <data name="ThatsIt" xml:space="preserve">
    <value>棒极了!</value>
  </data>
  <data name="Interest" xml:space="preserve">
    <value>您希望显示在锁屏界面上哪些内容?请从以下选择一项。</value>
  </data>
  <data name="GenericNewsTopicText" xml:space="preserve">
    <value>喜欢资讯,体育或者财经?一切都包在我们身上。若您希望看到某类新闻，请选择此项。</value>
  </data>
  <data name="GenericNewsTopic" xml:space="preserve">
    <value>新闻类</value>
  </data>
  <data name="LanguageLearningText" xml:space="preserve">
    <value>将您的手机变为学习一门外语的最佳利器。在您的锁屏街面上显示一个外文单词。</value>
  </data>
  <data name="LanguageLearning" xml:space="preserve">
    <value>语言学习</value>
  </data>
  <data name="SpecificTopicOfYourChoiceText" xml:space="preserve">
    <value>有一个特殊的爱好?选择此项若您希望收到某个特定话题的更新。例如，如果您对微软有兴趣，只需键入微软，我们将把有关该话题的报道呈现给您。</value>
  </data>
  <data name="SpecificTopicOfYourChoice" xml:space="preserve">
    <value>特定话题</value>
  </data>
  <data name="WordOfWisdomText" xml:space="preserve">
    <value>留白或给自己一句激励的话。</value>
  </data>
  <data name="WordOfWisdom" xml:space="preserve">
    <value>箴言</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="LanguageSetting" xml:space="preserve">
    <value>今天您想学些什么?</value>
  </data>
  <data name="SuggestedSource" xml:space="preserve">
    <value>推荐的源</value>
  </data>
  <data name="TranslationLanguage" xml:space="preserve">
    <value>翻译语言</value>
  </data>
  <data name="Stories" xml:space="preserve">
    <value>资讯</value>
  </data>
  <data name="Sports" xml:space="preserve">
    <value>体育</value>
  </data>
  <data name="Society" xml:space="preserve">
    <value>社会</value>
  </data>
  <data name="Politics" xml:space="preserve">
    <value>政要</value>
  </data>
  <data name="Military" xml:space="preserve">
    <value>军事</value>
  </data>
  <data name="Living" xml:space="preserve">
    <value>生活</value>
    <comment>``</comment>
  </data>
  <data name="History" xml:space="preserve">
    <value>历史</value>
  </data>
  <data name="Health" xml:space="preserve">
    <value>健康</value>
  </data>
  <data name="Finance" xml:space="preserve">
    <value>财经</value>
  </data>
  <data name="Entertainment" xml:space="preserve">
    <value>娱乐</value>
  </data>
  <data name="Domestic" xml:space="preserve">
    <value>国内</value>
  </data>
  <data name="Customized" xml:space="preserve">
    <value>自定义</value>
  </data>
  <data name="Business" xml:space="preserve">
    <value>商务</value>
  </data>
  <data name="World" xml:space="preserve">
    <value>国际</value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>视频</value>
  </data>
  <data name="Travel" xml:space="preserve">
    <value>旅游</value>
  </data>
  <data name="Technology" xml:space="preserve">
    <value>科技</value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>教育</value>
  </data>
</root>