<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>MY APPLICATION</value>
  </data>
  <data name="ByeBye" xml:space="preserve">
    <value>bye bye</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Menu Item</value>
  </data>
  <data name="lockscreen" xml:space="preserve">
    <value>lock screen</value>
  </data>
  <data name="mundane" xml:space="preserve">
    <value>mundane</value>
  </data>
  <data name="Bing" xml:space="preserve">
    <value>BING</value>
  </data>
  <data name="BingText" xml:space="preserve">
    <value>Refresh your day with a new cover photo from Bing everyday. If you choose this option, you agree that all rights belong to the respective owners of the image.</value>
  </data>
  <data name="GenericNewsTopic" xml:space="preserve">
    <value>GENERIC NEWS TOPIC</value>
  </data>
  <data name="GenericNewsTopicText" xml:space="preserve">
    <value>Love News, Sports or Finance? We got you covered. Choose this option if you would like to see a broader news topic.</value>
  </data>
  <data name="ImageCropping" xml:space="preserve">
    <value>Swipe around to pick a best view. When done, click 'That's it!'</value>
  </data>
  <data name="ImageSourceSelection" xml:space="preserve">
    <value>Prefer your own image as your lock screen? or, we will get a perfect one for you from Bing.</value>
  </data>
  <data name="Interest" xml:space="preserve">
    <value>What would you like to read in your lock screen? You can select some from below.</value>
  </data>
  <data name="JumpIn" xml:space="preserve">
    <value>Jump in!</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LanguageLearning" xml:space="preserve">
    <value>LANGUAGE LEARNING</value>
  </data>
  <data name="LanguageLearningText" xml:space="preserve">
    <value>Transform your phone into a best language learning tool. Learn a new word from a language of your choice right from the lock screen!</value>
  </data>
  <data name="LanguageSetting" xml:space="preserve">
    <value>What do you want to learn today?</value>
  </data>
  <data name="LetsGo" xml:space="preserve">
    <value>Let's go!</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="SpecificTopicOfYourChoice" xml:space="preserve">
    <value>SPECIFIC TOPIC OF YOUR CHOICE</value>
  </data>
  <data name="SpecificTopicOfYourChoiceText" xml:space="preserve">
    <value>This option allows user to use a specific topic of their interest.</value>
  </data>
  <data name="SuggestedSource" xml:space="preserve">
    <value>Suggested Source</value>
  </data>
  <data name="ThatsIt" xml:space="preserve">
    <value>That's it!</value>
  </data>
  <data name="TranslationLanguage" xml:space="preserve">
    <value>Translation Language</value>
  </data>
  <data name="UseOwnImage" xml:space="preserve">
    <value>USE MY OWN IMAGE</value>
  </data>
  <data name="UseOwnImageText" xml:space="preserve">
    <value>Choose this if you would like to use the same image as your lock screen over time. In the next step we will let you pick one from your library.</value>
  </data>
  <data name="WordOfWisdom" xml:space="preserve">
    <value>WORD OF WISDOM</value>
  </data>
  <data name="WordOfWisdomText" xml:space="preserve">
    <value>Leave blank, or use a sentence that you've been telling yourself.</value>
  </data>
  <data name="Business" xml:space="preserve">
    <value>Business</value>
  </data>
  <data name="Customized" xml:space="preserve">
    <value>Customized</value>
  </data>
  <data name="Domestic" xml:space="preserve">
    <value>Domestic</value>
  </data>
  <data name="Entertainment" xml:space="preserve">
    <value>Entertainment</value>
  </data>
  <data name="Finance" xml:space="preserve">
    <value>Finance</value>
  </data>
  <data name="Health" xml:space="preserve">
    <value>Health</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Living" xml:space="preserve">
    <value>Living</value>
    <comment>``</comment>
  </data>
  <data name="Military" xml:space="preserve">
    <value>Military</value>
  </data>
  <data name="Politics" xml:space="preserve">
    <value>Politics</value>
  </data>
  <data name="Society" xml:space="preserve">
    <value>Society</value>
  </data>
  <data name="Sports" xml:space="preserve">
    <value>Sports</value>
  </data>
  <data name="Stories" xml:space="preserve">
    <value>Stories</value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>Student</value>
  </data>
  <data name="Technology" xml:space="preserve">
    <value>Technology</value>
  </data>
  <data name="Travel" xml:space="preserve">
    <value>Travel</value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="World" xml:space="preserve">
    <value>World</value>
  </data>
  <data name="BroadInterestTopicPageIntro" xml:space="preserve">
    <value>Pick a news source, then select a category to continue.</value>
  </data>
  <data name="ContentBackground" xml:space="preserve">
    <value>Content Background</value>
  </data>
  <data name="ContentFontSize" xml:space="preserve">
    <value>Content Font Size</value>
  </data>
  <data name="ContentForeground" xml:space="preserve">
    <value>Content Foreground</value>
  </data>
  <data name="FontCASPageIntro" xml:space="preserve">
    <value>Customize the portion of the text you chose with new color and size.</value>
  </data>
  <data name="Great" xml:space="preserve">
    <value>Great!</value>
  </data>
  <data name="NewsSource" xml:space="preserve">
    <value>News Source</value>
  </data>
  <data name="PreviewPageIntro" xml:space="preserve">
    <value>You can customize styles by tapping the preview texts.</value>
  </data>
  <data name="ShowMe" xml:space="preserve">
    <value>Show Me!</value>
  </data>
  <data name="TitleBackground" xml:space="preserve">
    <value>Title Background</value>
  </data>
  <data name="TitleFontSize" xml:space="preserve">
    <value>Title Font Size</value>
  </data>
  <data name="TitleForeground" xml:space="preserve">
    <value>Title Foreground</value>
  </data>
  <data name="Topic" xml:space="preserve">
    <value>Topic</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="WordOfWisdomPageGuide" xml:space="preserve">
    <value>Type in something here. It will show up on your screen.</value>
  </data>
  <data name="WordOfWisdomPageIntro" xml:space="preserve">
    <value>Is there anything you want to tell yourself? Maybe to calm down, slow down?</value>
  </data>
  <data name="AliceBlue" xml:space="preserve">
<value>Alice Blue</value>
</data>
  <data name="AntiqueWhite" xml:space="preserve">
<value>Antique White</value>
</data>
  <data name="Aqua" xml:space="preserve">
<value>Aqua</value>
</data>
  <data name="Aquamarine" xml:space="preserve">
<value>Aquamarine</value>
</data>
  <data name="Azure" xml:space="preserve">
<value>Azure</value>
</data>
  <data name="Beige" xml:space="preserve">
<value>Beige</value>
</data>
  <data name="Bisque" xml:space="preserve">
<value>Bisque</value>
</data>
  <data name="Black" xml:space="preserve">
<value>Black</value>
</data>
  <data name="BlanchedAlmond" xml:space="preserve">
<value>Blanched Almond</value>
</data>
  <data name="Blue" xml:space="preserve">
<value>Blue</value>
</data>
  <data name="BlueViolet" xml:space="preserve">
<value>Blue Violet</value>
</data>
  <data name="Brown" xml:space="preserve">
<value>Brown</value>
</data>
  <data name="BurlyWood" xml:space="preserve">
<value>Burly Wood</value>
</data>
  <data name="CadetBlue" xml:space="preserve">
<value>Cadet Blue</value>
</data>
  <data name="Chartreuse" xml:space="preserve">
<value>Chartreuse</value>
</data>
  <data name="Chocolate" xml:space="preserve">
<value>Chocolate</value>
</data>
  <data name="Coral" xml:space="preserve">
<value>Coral</value>
</data>
  <data name="CornflowerBlue" xml:space="preserve">
<value>Cornflower Blue</value>
</data>
  <data name="Cornsilk" xml:space="preserve">
<value>Cornsilk</value>
</data>
  <data name="Crimson" xml:space="preserve">
<value>Crimson</value>
</data>
  <data name="Cyan" xml:space="preserve">
<value>Cyan</value>
</data>
  <data name="DarkBlue" xml:space="preserve">
<value>Dark Blue</value>
</data>
  <data name="DarkCyan" xml:space="preserve">
<value>Dark Cyan</value>
</data>
  <data name="DarkGoldenrod" xml:space="preserve">
<value>Dark Goldenrod</value>
</data>
  <data name="DarkGray" xml:space="preserve">
<value>Dark Gray</value>
</data>
  <data name="DarkGreen" xml:space="preserve">
<value>Dark Green</value>
</data>
  <data name="DarkKhaki" xml:space="preserve">
<value>Dark Khaki</value>
</data>
  <data name="DarkMagenta" xml:space="preserve">
<value>Dark Magenta</value>
</data>
  <data name="DarkOliveGreen" xml:space="preserve">
<value>Dark Olive Green</value>
</data>
  <data name="DarkOrange" xml:space="preserve">
<value>Dark Orange</value>
</data>
  <data name="DarkOrchid" xml:space="preserve">
<value>Dark Orchid</value>
</data>
  <data name="DarkRed" xml:space="preserve">
<value>Dark Red</value>
</data>
  <data name="DarkSalmon" xml:space="preserve">
<value>Dark Salmon</value>
</data>
  <data name="DarkSeaGreen" xml:space="preserve">
<value>Dark Sea Green</value>
</data>
  <data name="DarkSlateBlue" xml:space="preserve">
<value>Dark Slate Blue</value>
</data>
  <data name="DarkSlateGray" xml:space="preserve">
<value>Dark Slate Gray</value>
</data>
  <data name="DarkTurquoise" xml:space="preserve">
<value>Dark Turquoise</value>
</data>
  <data name="DarkViolet" xml:space="preserve">
<value>Dark Violet</value>
</data>
  <data name="DeepPink" xml:space="preserve">
<value>Deep Pink</value>
</data>
  <data name="DeepSkyBlue" xml:space="preserve">
<value>Deep Sky Blue</value>
</data>
  <data name="DimGray" xml:space="preserve">
<value>Dim Gray</value>
</data>
  <data name="DodgerBlue" xml:space="preserve">
<value>Dodger Blue</value>
</data>
  <data name="Firebrick" xml:space="preserve">
<value>Firebrick</value>
</data>
  <data name="FloralWhite" xml:space="preserve">
<value>Floral White</value>
</data>
  <data name="ForestGreen" xml:space="preserve">
<value>Forest Green</value>
</data>
  <data name="Fuchsia" xml:space="preserve">
<value>Fuchsia</value>
</data>
  <data name="Gainsboro" xml:space="preserve">
<value>Gainsboro</value>
</data>
  <data name="GhostWhite" xml:space="preserve">
<value>Ghost White</value>
</data>
  <data name="Gold" xml:space="preserve">
<value>Gold</value>
</data>
  <data name="Goldenrod" xml:space="preserve">
<value>Goldenrod</value>
</data>
  <data name="Gray" xml:space="preserve">
<value>Gray</value>
</data>
  <data name="Green" xml:space="preserve">
<value>Green</value>
</data>
  <data name="GreenYellow" xml:space="preserve">
<value>Green Yellow</value>
</data>
  <data name="Honeydew" xml:space="preserve">
<value>Honeydew</value>
</data>
  <data name="HotPink" xml:space="preserve">
<value>Hot Pink</value>
</data>
  <data name="IndianRed" xml:space="preserve">
<value>Indian Red</value>
</data>
  <data name="Indigo" xml:space="preserve">
<value>Indigo</value>
</data>
  <data name="Ivory" xml:space="preserve">
<value>Ivory</value>
</data>
  <data name="Khaki" xml:space="preserve">
<value>Khaki</value>
</data>
  <data name="Lavender" xml:space="preserve">
<value>Lavender</value>
</data>
  <data name="LavenderBlush" xml:space="preserve">
<value>Lavender Blush</value>
</data>
  <data name="LawnGreen" xml:space="preserve">
<value>Lawn Green</value>
</data>
  <data name="LemonChiffon" xml:space="preserve">
<value>Lemon Chiffon</value>
</data>
  <data name="LightBlue" xml:space="preserve">
<value>Light Blue</value>
</data>
  <data name="LightCoral" xml:space="preserve">
<value>Light Coral</value>
</data>
  <data name="LightCyan" xml:space="preserve">
<value>Light Cyan</value>
</data>
  <data name="LightGoldenrodYellow" xml:space="preserve">
<value>Light Goldenrod Yellow</value>
</data>
  <data name="LightGray" xml:space="preserve">
<value>Light Gray</value>
</data>
  <data name="LightGreen" xml:space="preserve">
<value>Light Green</value>
</data>
  <data name="LightPink" xml:space="preserve">
<value>Light Pink</value>
</data>
  <data name="LightSalmon" xml:space="preserve">
<value>Light Salmon</value>
</data>
  <data name="LightSeaGreen" xml:space="preserve">
<value>Light Sea Green</value>
</data>
  <data name="LightSkyBlue" xml:space="preserve">
<value>Light Sky Blue</value>
</data>
  <data name="LightSlateGray" xml:space="preserve">
<value>Light Slate Gray</value>
</data>
  <data name="LightSteelBlue" xml:space="preserve">
<value>Light Steel Blue</value>
</data>
  <data name="LightYellow" xml:space="preserve">
<value>Light Yellow</value>
</data>
  <data name="Lime" xml:space="preserve">
<value>Lime</value>
</data>
  <data name="LimeGreen" xml:space="preserve">
<value>Lime Green</value>
</data>
  <data name="Linen" xml:space="preserve">
<value>Linen</value>
</data>
  <data name="Magenta" xml:space="preserve">
<value>Magenta</value>
</data>
  <data name="Maroon" xml:space="preserve">
<value>Maroon</value>
</data>
  <data name="MediumAquamarine" xml:space="preserve">
<value>Medium Aquamarine</value>
</data>
  <data name="MediumBlue" xml:space="preserve">
<value>Medium Blue</value>
</data>
  <data name="MediumOrchid" xml:space="preserve">
<value>Medium Orchid</value>
</data>
  <data name="MediumPurple" xml:space="preserve">
<value>Medium Purple</value>
</data>
  <data name="MediumSeaGreen" xml:space="preserve">
<value>Medium Sea Green</value>
</data>
  <data name="MediumSlateBlue" xml:space="preserve">
<value>Medium Slate Blue</value>
</data>
  <data name="MediumSpringGreen" xml:space="preserve">
<value>Medium Spring Green</value>
</data>
  <data name="MediumTurquoise" xml:space="preserve">
<value>Medium Turquoise</value>
</data>
  <data name="MediumVioletRed" xml:space="preserve">
<value>Medium Violet Red</value>
</data>
  <data name="MidnightBlue" xml:space="preserve">
<value>Midnight Blue</value>
</data>
  <data name="MintCream" xml:space="preserve">
<value>Mint Cream</value>
</data>
  <data name="MistyRose" xml:space="preserve">
<value>Misty Rose</value>
</data>
  <data name="Moccasin" xml:space="preserve">
<value>Moccasin</value>
</data>
  <data name="NavajoWhite" xml:space="preserve">
<value>Navajo White</value>
</data>
  <data name="Navy" xml:space="preserve">
<value>Navy</value>
</data>
  <data name="OldLace" xml:space="preserve">
<value>Old Lace</value>
</data>
  <data name="Olive" xml:space="preserve">
<value>Olive</value>
</data>
  <data name="OliveDrab" xml:space="preserve">
<value>Olive Drab</value>
</data>
  <data name="Orange" xml:space="preserve">
<value>Orange</value>
</data>
  <data name="OrangeRed" xml:space="preserve">
<value>Orange Red</value>
</data>
  <data name="Orchid" xml:space="preserve">
<value>Orchid</value>
</data>
  <data name="PaleGoldenrod" xml:space="preserve">
<value>Pale Goldenrod</value>
</data>
  <data name="PaleGreen" xml:space="preserve">
<value>Pale Green</value>
</data>
  <data name="PaleTurquoise" xml:space="preserve">
<value>Pale Turquoise</value>
</data>
  <data name="PaleVioletRed" xml:space="preserve">
<value>Pale Violet Red</value>
</data>
  <data name="PapayaWhip" xml:space="preserve">
<value>Papaya Whip</value>
</data>
  <data name="PeachPuff" xml:space="preserve">
<value>Peach Puff</value>
</data>
  <data name="Peru" xml:space="preserve">
<value>Peru</value>
</data>
  <data name="Pink" xml:space="preserve">
<value>Pink</value>
</data>
  <data name="Plum" xml:space="preserve">
<value>Plum</value>
</data>
  <data name="PowderBlue" xml:space="preserve">
<value>Powder Blue</value>
</data>
  <data name="Purple" xml:space="preserve">
<value>Purple</value>
</data>
  <data name="Red" xml:space="preserve">
<value>Red</value>
</data>
  <data name="RosyBrown" xml:space="preserve">
<value>Rosy Brown</value>
</data>
  <data name="RoyalBlue" xml:space="preserve">
<value>Royal Blue</value>
</data>
  <data name="SaddleBrown" xml:space="preserve">
<value>Saddle Brown</value>
</data>
  <data name="Salmon" xml:space="preserve">
<value>Salmon</value>
</data>
  <data name="SandyBrown" xml:space="preserve">
<value>Sandy Brown</value>
</data>
  <data name="SeaGreen" xml:space="preserve">
<value>Sea Green</value>
</data>
  <data name="SeaShell" xml:space="preserve">
<value>Sea Shell</value>
</data>
  <data name="Sienna" xml:space="preserve">
<value>Sienna</value>
</data>
  <data name="Silver" xml:space="preserve">
<value>Silver</value>
</data>
  <data name="SkyBlue" xml:space="preserve">
<value>Sky Blue</value>
</data>
  <data name="SlateBlue" xml:space="preserve">
<value>Slate Blue</value>
</data>
  <data name="SlateGray" xml:space="preserve">
<value>Slate Gray</value>
</data>
  <data name="Snow" xml:space="preserve">
<value>Snow</value>
</data>
  <data name="SpringGreen" xml:space="preserve">
<value>Spring Green</value>
</data>
  <data name="SteelBlue" xml:space="preserve">
<value>Steel Blue</value>
</data>
  <data name="Tan" xml:space="preserve">
<value>Tan</value>
</data>
  <data name="Teal" xml:space="preserve">
<value>Teal</value>
</data>
  <data name="Thistle" xml:space="preserve">
<value>Thistle</value>
</data>
  <data name="Tomato" xml:space="preserve">
<value>Tomato</value>
</data>
  <data name="Turquoise" xml:space="preserve">
<value>Turquoise</value>
</data>
  <data name="Violet" xml:space="preserve">
<value>Violet</value>
</data>
  <data name="Wheat" xml:space="preserve">
<value>Wheat</value>
</data>
  <data name="White" xml:space="preserve">
<value>White</value>
</data>
  <data name="WhiteSmoke" xml:space="preserve">
<value>White Smoke</value>
</data>
  <data name="Yellow" xml:space="preserve">
<value>Yellow</value>
</data>
  <data name="YellowGreen" xml:space="preserve">
<value>Yellow Green</value>
</data>
  <data name="Transparent" xml:space="preserve">
<value>Transparent</value>
</data>


  <data name="AllSetPageIntro" xml:space="preserve">
    <value>Here're the final tweaks...</value>
  </data>
  <data name="PinShortcut" xml:space="preserve">
    <value>Pin a shortcut to the story</value>
  </data>
  <data name="PinShortcutDetails" xml:space="preserve">
    <value>You can also pin a short cut tile on the start screen so you can jump to the story real quick.</value>
  </data>
  <data name="SayYes" xml:space="preserve">
    <value>say yes</value>
  </data>
  <data name="SetAsLockScreen" xml:space="preserve">
    <value>Set as lock screen provider and allow background update</value>
  </data>
  <data name="WPRestrictions" xml:space="preserve">
    <value>Windows Phone requires us to obtain your consent before we can change your lock screen.</value>
  </data>
  <data name="AllDone" xml:space="preserve">
    <value>Finalize</value>
  </data>
  <data name="AverageRequestPerDay" xml:space="preserve">
    <value>Average updates/day:</value>
  </data>
  <data name="AverageRequestPerDayExplained" xml:space="preserve">
    <value>This is on average the number of updates you will receive per day.</value>
  </data>
  <data name="BalanceRunOut" xml:space="preserve">
    <value>What happens if my balance runs out?</value>
  </data>
  <data name="BalanceRunOutPromptText" xml:space="preserve">
    <value>If your balance runs out, you will still receive updates, but at a significantly lowered rate. We'll remind you if you're out of balance soon.</value>
  </data>
  <data name="BalanceRunOutPromptTitle" xml:space="preserve">
    <value>WHAT IF QUOTA RUNS OUT...</value>
  </data>
  <data name="CalcPriceCaption" xml:space="preserve">
    <value>DETERMINING YOUR PRICE</value>
  </data>
  <data name="CalculatedDaysPer099Lasts" xml:space="preserve">
    <value>Calculated days per $0.99 lasts:</value>
  </data>
  <data name="ComputePrice" xml:space="preserve">
    <value>Compute Price:</value>
  </data>
  <data name="ComputePriceExplained" xml:space="preserve">
    <value>This is what our service provider charges us for computing. If our service provider lowers their traffic price, we'll lower ours too!</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value> days</value>
  </data>
  <data name="DaysFor099" xml:space="preserve">
    <value> days for $0.99</value>
  </data>
  <data name="DontWantToPay" xml:space="preserve">
    <value>What if I don't want to pay?</value>
  </data>
  <data name="Estimated" xml:space="preserve">
    <value>(Estimated)</value>
  </data>
  <data name="NotThereYetText" xml:space="preserve">
    <value>Come back later, as you still have sufficient balance. We'll remind you when it is running out.</value>
  </data>
  <data name="NotThereYetTitle" xml:space="preserve">
    <value>NOT THERE YET</value>
  </data>
  <data name="PinShortcutButton" xml:space="preserve">
    <value>pin shortcut</value>
  </data>
  <data name="PriceCalc" xml:space="preserve">
    <value>How is my price calculated?</value>
  </data>
  <data name="Purchase" xml:space="preserve">
    <value>purchase </value>
  </data>
  <data name="RemainingBalance" xml:space="preserve">
    <value>Your remaining balance lasts:</value>
  </data>
  <data name="RemainingBalanceText" xml:space="preserve">
    <value>LockView uses a web service to compose your image. LockView maintains this service by kindly ask you to purchase your quota for $</value>
  </data>
  <data name="SizePerRequest" xml:space="preserve">
    <value>Size per request:</value>
  </data>
  <data name="SizePerRequestExplained" xml:space="preserve">
    <value>This is based on the size of the cropped image you just selected, plus some metadata. This may vary a bit if you use automatic image update.</value>
  </data>
  <data name="TrafficPrice" xml:space="preserve">
    <value>Traffic Price:</value>
  </data>
  <data name="TrafficPriceExplained" xml:space="preserve">
    <value>This is what our service provider charges us for network traffic. If our service provider lowers their traffic price, we'll lower ours too!</value>
  </data>
  <data name="WhileBalanceLastsText" xml:space="preserve">
    <value>While your balance lasts, you receive full feature of the application. As an encouragement to support our work, you will have to reinstall this app to get some new balance every few days.</value>
  </data>
  <data name="WhileBalanceLastsTitle" xml:space="preserve">
    <value>I'M NOT A FAN OF PAID APP...</value>
  </data>
  <data name="Cooking" xml:space="preserve">
    <value>Cooking</value>
  </data>
  <data name="Hotpicks" xml:space="preserve">
    <value>HotPicks</value>
  </data>
  <data name="Movie" xml:space="preserve">
    <value>Movie</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Reading" xml:space="preserve">
    <value>Reading</value>
  </data>
  <data name="SpecificTopicPageDisclaimer" xml:space="preserve">
    <value>LockView is not a news provider. All related news is culled from Internet.</value>
  </data>
  <data name="SpecificTopicPageText" xml:space="preserve">
    <value>Type in a specific topic. e.g. Apple, UW, Google, President, Seahawk.</value>
  </data>
  <data name="SpecificTopicPageTitle" xml:space="preserve">
    <value>Tell us about a specific topic. We'll gather all news about it for you.</value>
  </data>
  <data name="WordOfWisdomPageText" xml:space="preserve">
    <value>Type in something here. It will show up on your screen.</value>
  </data>
  <data name="WordOfWisdomPageTitle" xml:space="preserve">
    <value>Is there anything you want to tell yourself? Maybe to calm down, slow down?</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>Footer</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="InterestSelectionGuide" xml:space="preserve">
    <value>You can select multiple categories. If we cannot fit all the contents on your screen, some of them will be dropped until next time they fit.</value>
  </data>
  <data name="AllSetTitleText" xml:space="preserve">
    <value>Thanks! You're all set.</value>
  </data>
  <data name="InterestSelectionProgress" xml:space="preserve">
    <value>Setup  Interest... Step </value>
  </data>
  <data name="WeatherInterest" xml:space="preserve">
    <value>WEATHER</value>
  </data>
  <data name="WeatherInterestText" xml:space="preserve">
    <value>Always worried about rain? Track your favourite city's immediate weather condition right on your Lock Screen.</value>
  </data>
  <data name="WeatherSettingPageText" xml:space="preserve">
    <value>Just put in the name of the city. We'll give you its immediate weather forcast so you won't be caught by bad weather!</value>
  </data>
  <data name="WeatherSettingPageTitle" xml:space="preserve">
    <value>Where do you want to track?</value>
  </data>
  <data name="UnitMetric" xml:space="preserve">
    <value>METRIC</value>
  </data>
  <data name="UseImperial" xml:space="preserve">
    <value>Use imperial</value>
  </data>
  <data name="UseMetric" xml:space="preserve">
    <value>Use metric</value>
  </data>
  <data name="EnUs" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Sentence" xml:space="preserve">
    <value>Sentence</value>
  </data>
  <data name="Word" xml:space="preserve">
    <value>Word</value>
  </data>
  <data name="ZhCn" xml:space="preserve">
    <value>Chinese</value>
  </data>
  <data name="NASA" xml:space="preserve">
    <value>NASA</value>
  </data>
  <data name="NASAInterestText" xml:space="preserve">
    <value>Use the explaination for the image shown on your screen. This option is only available if you're using NASA as your image provider in the previous screen.</value>
  </data>
  <data name="NASAInterestTitle" xml:space="preserve">
    <value>NASA IMAGE CAPTION</value>
  </data>
  <data name="NASAText" xml:space="preserve">
    <value>Nothing is more beautiful than the mother universe. NASA Images enlight your day from the beginning. If you choose this option, you agree that all rights belong to the respective owners of the image.</value>
  </data>
  <data name="Redeem" xml:space="preserve">
    <value>redeem</value>
  </data>
  <data name="RedeemACode" xml:space="preserve">
    <value>REDEEM A CODE</value>
  </data>
  <data name="RedeemACodeGuide" xml:space="preserve">
    <value>Enter your code below. It should look something like this: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</value>
  </data>
  <data name="RedeemStatusNotOkay" xml:space="preserve">
    <value>Sorry, but this doesn't look like a valid code.</value>
  </data>
  <data name="RedeemStatusOkay" xml:space="preserve">
    <value>Great! You can now enjoy LockView free of charge.</value>
  </data>
  <data name="NothingToDo" xml:space="preserve">
    <value>Great! We have taken care of everything. If you haven't already, press Finalize and you're good to go. And oh, by the way, take a look at your Lock Screen.</value>
  </data>
</root>