<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>MY APPLICATION</value>
  </data>
  <data name="ByeBye" xml:space="preserve">
    <value>bye bye</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Menu Item</value>
  </data>
  <data name="lockscreen" xml:space="preserve">
    <value>lock screen</value>
  </data>
  <data name="mundane" xml:space="preserve">
    <value>mundane</value>
  </data>
  <data name="Bing" xml:space="preserve">
    <value>BING</value>
  </data>
  <data name="BingText" xml:space="preserve">
    <value>Refresh your day with a new cover photo from Bing everyday. If you choose this option, you agree that all rights belong to the respective owners of the image.</value>
  </data>
  <data name="GenericNewsTopic" xml:space="preserve">
    <value>GENERIC NEWS TOPIC</value>
  </data>
  <data name="GenericNewsTopicText" xml:space="preserve">
    <value>Love News, Sports or Finance? We got you covered. Choose this option if you would like to see a broader news topic.</value>
  </data>
  <data name="ImageCropping" xml:space="preserve">
    <value>Swipe around to pick a best view. When done, click 'That's it!'</value>
  </data>
  <data name="ImageSourceSelection" xml:space="preserve">
    <value>Prefer your own image as your lock screen? or, we will get a perfect one for you from Bing.</value>
  </data>
  <data name="Interest" xml:space="preserve">
    <value>What would you like to read in your lock screen? Select a category from below.</value>
  </data>
  <data name="JumpIn" xml:space="preserve">
    <value>Jump in!</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LanguageLearning" xml:space="preserve">
    <value>LANGUAGE LEARNING</value>
  </data>
  <data name="LanguageLearningText" xml:space="preserve">
    <value>Transform your phone into a best language learning tool. Learn a new word from a language of your choice right from the lock screen!</value>
  </data>
  <data name="LanguageSetting" xml:space="preserve">
    <value>What do you want to learn today?</value>
  </data>
  <data name="LetsGo" xml:space="preserve">
    <value>Let's go!</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="SpecificTopicOfYourChoice" xml:space="preserve">
    <value>SPECIFIC TOPIC OF YOUR CHOICE</value>
  </data>
  <data name="SpecificTopicOfYourChoiceText" xml:space="preserve">
    <value>This option allows user to use a specific topic of their interest. For example, if you are interested in Microsoft news, just type in Microsoft and we'll gather you the hottest and latest Microsoft news.</value>
  </data>
  <data name="SuggestedSource" xml:space="preserve">
    <value>Suggested Source</value>
  </data>
  <data name="ThatsIt" xml:space="preserve">
    <value>That's it!</value>
  </data>
  <data name="TranslationLanguage" xml:space="preserve">
    <value>Translation Language</value>
  </data>
  <data name="UseOwnImage" xml:space="preserve">
    <value>USE MY OWN IMAGE</value>
  </data>
  <data name="UseOwnImageText" xml:space="preserve">
    <value>Choose this if you would like to use the same image as your lock screen over time. In the next step we will let you pick one from your library.</value>
  </data>
  <data name="WordOfWisdom" xml:space="preserve">
    <value>WORD OF WISDOM</value>
  </data>
  <data name="WordOfWisdomText" xml:space="preserve">
    <value>Leave blank, or use a sentence that you've been telling yourself.</value>
  </data>
  <data name="Business" xml:space="preserve">
    <value>Business</value>
  </data>
  <data name="Customized" xml:space="preserve">
    <value>Customized</value>
  </data>
  <data name="Domestic" xml:space="preserve">
    <value>Domestic</value>
  </data>
  <data name="Entertainment" xml:space="preserve">
    <value>Entertainment</value>
  </data>
  <data name="Finance" xml:space="preserve">
    <value>Finance</value>
  </data>
  <data name="Health" xml:space="preserve">
    <value>Health</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Living" xml:space="preserve">
    <value>Living</value>
    <comment>``</comment>
  </data>
  <data name="Military" xml:space="preserve">
    <value>Military</value>
  </data>
  <data name="Politics" xml:space="preserve">
    <value>Politics</value>
  </data>
  <data name="Society" xml:space="preserve">
    <value>Society</value>
  </data>
  <data name="Sports" xml:space="preserve">
    <value>Sports</value>
  </data>
  <data name="Stories" xml:space="preserve">
    <value>Stories</value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>Student</value>
  </data>
  <data name="Technology" xml:space="preserve">
    <value>Technology</value>
  </data>
  <data name="Travel" xml:space="preserve">
    <value>Travel</value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="World" xml:space="preserve">
    <value>World</value>
  </data>
  <data name="BroadInterestTopicPageIntro" xml:space="preserve">
    <value>Pick a news source, then select a category to continue.</value>
  </data>
  <data name="NewsSource" xml:space="preserve">
    <value>News Source</value>
  </data>
  <data name="ShowMe" xml:space="preserve">
    <value>Show Me!</value>
  </data>
  <data name="Topic" xml:space="preserve">
    <value>Topic</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="WordOfWisdomPageGuide" xml:space="preserve">
    <value>Type in something here. It will show up on your screen.</value>
  </data>
  <data name="WordOfWisdomPageIntro" xml:space="preserve">
    <value>Is there anything you want to tell yourself? Maybe to calm down, slow down?</value>
  </data>
</root>